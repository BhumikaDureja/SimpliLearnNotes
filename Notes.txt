https://docs.google.com/document/d/1L_HOJUQQLTAL-XvMGUmt1_dpMLfKUguwNxQFkgnQEVg/edit
nicks204/CoreJava2022

Download JDK 8 for selenium 
https://www.oracle.com/in/java/technologies/javase/javase8-archive-downloads.html
login id Oracle: bhumikadureja@gmail.com pass: Tubelight@12


To download git - https://git-scm.com/downloads   Git password - Tubelight@12 id bhumikadureja@gmail
command to verify git on command prompt  git --version

https://github.com/   username BhumikaDureja password - GaganGambhir@18
https://github.com/settings/tokens  to create token
Use below token in LAB machine in linux:
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

to kill eclipse app thru terminal window
ps -aef | grep eclipse

To push into github

cd /home/bhumikadurejagm/eclipse-workspace/Hello_World
       16-Jan-2022 05:09:52 git init
    4  16-Jan-2022 05:13:11 git add src/test/JavaDemo.java   or use git add . --- to add all the files otherwise give specific path src/......
    5  16-Jan-2022 05:14:02 git commit -m "first commit"
    6  16-Jan-2022 05:15:19 git config --global user.email "bhumikadureja@gmail.com"
    7  16-Jan-2022 05:16:18 git config --global user.name "BhumikaDureja"
    8  16-Jan-2022 05:16:24 git commit -m "first commit"
    9  16-Jan-2022 05:17:58 history
	git remote add origin https://github.com/BhumikaDureja/Hello_World.git
	git push origin main
	bhumikadurejagm@ip-172-31-25-124:~/eclipse-workspace/Hello_World$ git remote add origin https://github.com/BhumikaDureja/Hello_World.git
bhumikadurejagm@ip-172-31-25-124:~/eclipse-workspace/Hello_World$ git push origin main
error: src refspec main does not match any.
error: failed to push some refs to 'https://github.com/BhumikaDureja/Hello_World.git'
bhumikadurejagm@ip-172-31-25-124:~/eclipse-workspace/Hello_World$ git branch
* master
bhumikadurejagm@ip-172-31-25-124:~/eclipse-workspace/Hello_World$ git push origin master

C:\Users\bhumika.dureja\eclipse-workspace



----------------------------------------------------------

Inheritence - 29th Jan 
If child class is from different package then you need to import it in runner class
Super Keyword  - to call the variables or methods of parent class to cHild class
this keyword - to call the variables of the same class


Polymorphism

1. Run Time - Method Overriding -- happens in different classes , may be parent child relationship
2. Compile Time - Method Overloading -- happens within same class


Abstraction

An abstract class can have both abstract and non abstract methods


Interface - By default all the methods inside Interface are abstract methods. We can achieve 100% abstraction.
No need to write abstract in front of methods explicitly. Can write abstarct by choice. 
Can have multiple parents in case of Interface but cannot have multiple parents in case of Inheritence and abstraction. This means interface supports multiple inheritance


-----------------------
maeven repository
https://mvnrepository.com/artifact/mysql/mysql-connector-java

-------------------------

JavaScript functions to scroll  (see program ScrollExample in WebDriverProject)

https://developer.mozilla.org/en-US/docs/Web/API/Element


-------
To upload to git -- firstly cd project path 
git init
git add .
git commit -m "any name"
git remote add origin <path of git repository>
git push origin master


-----------------------------------------------------------

Phase 2

https://docs.google.com/document/d/1HxYuJYjCEZEezRKQ-riLGfQE1KvP9QCrLUhxl4hRPHg/edit

download maven
https://maven.apache.org/download.cgi


https://mvnrepository.com/

dependency for creation of the test report - use the latest version, below example has versio 2.41.2
https://mvnrepository.com/artifact/com.relevantcodes/extentreports/2.41.2



To run a project from command line
Provide surefire amd maven compiler plugin in pom.xml

then open command line from project folder 
on the command line give following commands
1. mvn clean -> cleans the project folder
2. mvn test -> it will go and run the test cases

--------------------------------------------------------------------
slf4j dependendcy

 <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-simple</artifactId>
        <version>1.7.25</version>
    </dependency>
    <dependency>
        <groupId>org.slf4j</groupId>            
        <artifactId>slf4j-api</artifactId>
        <version>1.7.25</version>
    </dependency>
-----------------------------------------------------------------------

To download jenkins
https://www.jenkins.io/download/
to install jenkins from cmd
java -jar jenkins.war


sudo systemctl stop tomcat  --- To stop Tomcat in lab

localhost:8080
Jendkins ID: admin, password: admin

To run jenkins when installation is complete
On commnd promt, go to folder where jenkins war file is saved
cd C:\Jenkins
then run command java -jar jenkins.war
go to chrome and run localhost:8080 and then give id and password


TestNG section is not yet covered like Listeneres, Grid, Ant, Reports, Taking Screenshot

Nikunj repo - https://github.com/nicks204/TestNg_MavenFeb22.git


Selenium Grid Jar file   --- MIRO BOARD ------    https://miro.com/app/board/uXjVODnpTRM=/
Selenium server standalone 3.141.59 jar file
https://drive.google.com/drive/u/2/folders/150j47a6X3nZgFkCpjhUpabKbL6rdQzu1
OR
use below link to download Selenium server standalone 3.141.59 jar file
https://selenium-release.storage.googleapis.com/index.html?path=3.141/

Selenium Grid Setup
1. open cmd from cd c:/Grid 
2. Run command   
				java -jar selenium-server-standalone-3.141.59.jar -role hub (Trying to create Hub machine on laptop)
	To verify if selenium Grid is up and running( do not close command prompt), Run below on Browser
	http://localhost:4444/grid/console
	
3. Get the Node machines
Because we donot have multiple machines so we will set up the Node machine on the same machine as Hub machine
Copy Chromedriver in grid folder
again open cmd and do cd c:/Grid

4. Run this command to setup node machine and also give hub details and chrome driver details in the command. Hub is running on 4444 server
			java -Dwebdriver.chrome.driver="chromedriver.exe"  -jar selenium-server-standalone-3.141.59.jar -role node -hub http://localhost:4444/grid/register
	To verify if selenium Grid is up and running( do not close command prompt), Run below on Browser
	http://localhost:4444/grid/console
	
5. Run this command to setup one more node machine and also give hub details in the command. Hub is running on 4444 server
			java -Dwebdriver.chrome.driver="chromedriver.exe"  -jar selenium-server-standalone-3.141.59.jar -role node -hub http://localhost:4444/grid/register
	To verify if selenium Grid is up and running( do not close command prompt), Refresh previously opened Browser window and now two node machines will be visible
	http://localhost:4444/grid/console
	
	
---------------------------------------------------------------

Ant
https://ant.apache.org/bindownload.cgi	

build.xml & testng.xml download here
https://drive.google.com/drive/u/2/folders/1S7SGvBHQe_03gZbshBgR7gZnC4oHfbZD

-------------

Cucumber link if in case not getting installed
https://cucumber.github.io/cucumber-eclipse/update-site


command to dynamically run Runner class from commandline 
This command will only run Sanity test cases from command line and whatever tags are present on command line will be overwritten when run from comamnd line usng below command

mvn test -Dcucumber.options="--tags @Sanity"

--------------------------------------------------
https://github.com/simran30singhal/Cucumber-SauceDemo.git


-----------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------

PHASE 3

Jmeter installation - https://jmeter.apache.org/download_jmeter.cgi
Jmeter plugin manager - https://jmeter-plugins.org/wiki/PluginsManager/


BlazerMeter Chrome Browser plugin - https://chrome.google.com/webstore/detail/blazemeter-the-continuous/mbopgmdnpcbohhpnfglgohlbhfongabi?hl=en


https://community.simplilearn.com/threads/phase-3-test-and-monitor-your-applications-through-non-functional-and-api-testing-jan-cohort-apr-23-may-29-nikunj-d-shah.71985/

https://drive.google.com/drive/folders/1BlQd_ZQIhEbcZwjQ1-lGl7zRC1WbnAiQ?usp=sharing


SMTP protocol
To set up less secure apps - https://myaccount.google.com/lesssecureapps



FTP 
https://dlptest.com/ftp-test/
FTP file - ftp://ftp.dlptest.com/

For reference - https://github.com/nishantjohrii/JmeterFolder


POSTMAN

sample apis : https://reqres.in/api/users

To download files
https://drive.google.com/drive/u/2/folders/1-F4KXfx-CD9w2BCBWpUj8CG7SDVZyT-I
 
NodeJS installer
https://nodejs.org/en/download/
commands on command prompt
To verify if node version is present or not    node -v
Node package manager  npm -v 

To install json server from cmd
npm install -g json-server 

To verify installed json server version
json-server  -v

To run json server with the mock DB
json-server --watch db.json --routes routes.json


Command to install newman -- open postman folder and from there run the command
npm install -g newman

To run postman collection from command prompt - first install newman with above command and then run below command from the postman folder again
newman run APIChaining.postman_collection.json

To run multiple iterations from command prompt of postman collection
newman run APIChaining.postman_collection.json -n 2

Command which ran from jenkins
newman run C:\Users\bhumika.dureja\Desktop\Postman\APIChaining.postman_collection.json


To run datadriven postman request through cmd/newman
newman run https://www.getpostman.com/collections/45656f92a1bfe9089f11 -d "C:\Users\bhumika.dureja\Desktop\Postman\data.csv"

Swagger -- https://swagger.io/tools/swagger-ui/


command to install html report plugin - to generate newman reports
npm install -g newman-reporter-htmlextra

Command to ruun and generate the report
newman run C:\Users\bhumika.dureja\Desktop\Postman\APIChaining.postman_collection.json -r htmlextra


git clone https://github.com/onlyfullstack/rest-assured-tutorial.git

mvn spring-boot:run


To install java on AWS server
sudo yum install java-1.8.0

To verify java version
java -version

To install maven on AWS server
sudo yum install maven -y

To verify maven version
mvn - v

To install git on AWS server
sudo yum install git -y

Clone Git 
git clone https://github.com/onlyfullstack/rest-assured-tutorial.git

cd rest-assured-tutorial
mvn spring-boot:run


Shared doc phase 3

https://docs.google.com/document/d/1UGFTYA-R9InUx37zdMt9zXs7Z0wYx1HHF1RwlvCtnQo/edit

To run RestAssured project from commandline
1. Generate testng.xml
2. Surefire path plugin
3. Open cmd from project folder
4. Run command on cmd ->    mvn clean test


GitHib repository link for RestAssuredCucumber project
https://github.com/nicks204/Cucumber_Apr22/blob/master/pom.xml



Reference Githu repo - https://github.com/simran30singhal

Phase3 project end 
repo - https://github.com/onlyfullstack/rest-assured-tutorial.git
command to run repo - 
cd rest-assured-tutorial
mvn spring-boot:run

Phase end project definition



1) Open AWS
2) Create the EC2 Instance and connect to that
3) Install
	
	Java
	Maven
	Git

4) Clone the Repo https://github.com/onlyfullstack/rest-assured-tutorial.git

5) cd rest-assured-tutorial

6) mvn spring-boot:run

======================================

API Chaining

1) Get All Employee
2) Create Employee
3) Update the Employee
4) Delete that Employee
5) Get Deleted Employee

from Prachi Deshpande to All Participants:
1) sudo yum install java-1.8.0 -y
2) sudo yum install maven -y
3) sudo yum install git-y

AWS server commands ;--
1) install Java ----- sudo yum install java-1.8.0 -y -- Java -version
2) install Maven ---- sudo yum install maven -y -- mvn -v
3) install git ----- sudo yum install git -y -- git --v
4) Clone repository ---- git clone https://github.com/onlyfullstack/rest-assured-tutorial.git
5) Change to repository ------ cd rest-assured-tutorial
6) Maven command to start ------ mvn spring-boot:run


from Simran Singhal to All Participants:
1) sudo yum install java-1.8.0 -y
2) sudo yum install maven -y
3) sudo yum install git-y


Nikunj Repo for reference - https://github.com/nicks204/RestCucumberJune22   -- to run Rest Assured Cucumber project 	from Test Runner file



---------------------------------------------
Mobile automation


Community Link - https://community.simplilearn.com/threads/phase-4-learn-mobile-automation-and-cloud-testing-jan-cohort-jun-25-26-jul-2-3-9-10-16-17-23-24-30-31-mitesh-verma.73592/


C:\Program Files\Java\jdk-15.0.2\bin

To verify node version 
nove -v

command to run appium
npm install -g appium

Run the server using command    
appium

To verify npm version
npm --v

To install npm globally
npm install --location=global appium

site from where we can install destop version of appium
https://github.com/appium/appium-desktop
https://github.com/appium/appium-desktop/releases/tag/v1.22.3-4


file settings >sdk tools >HAXM installer

HOW TO RUN VIRTUAL DEVICE IN ANDROID STUDIO
====================================================
1. haxm -> install it  from https://github.com/intel/haxm/wiki/Installation-Instructions-on-Windows
2. envable virtauliztaion from BIOS
3. file >settings >sdk tools > haxm install.



Command to verify devices running on emulator
adb devices

To setup environment path to run adb devices command
C:\Users\bhumika.dureja\AppData\Local\Android\Sdk\platform-tools

Download appium inspector
https://github.com/appium/appium-inspector/releases

https://github.com/appium/appium-inspector/releases/download/v2022.5.4/Appium-Inspector-windows-2022.5.4.zip

{
    "platformName":"Android",
    "platformVersion":"7.1.1",
    "deviceName":"Android SDK built for x86"
    "app":"C:\Users\bhumika.dureja\Downloads\contactdemo.apk"
}

Download apk
https://drive.google.com/file/d/1rNtN1m89NPXOMXPXCDHUupyYsRmdUGdJ/view?usp=sharing

----
PHASE 4  -  DAY 1
-------------------------------


Mobile Testing using Appium
--------------------------------

Web Based Automation  => selenium to automate browsers
							chrome , FF , edge, safari....
							locators -> xpath css , id
							

Mobile Automation   =>  Apps in mobile
						touch ( gesture, swiping , dragging..)
						screen size -> 5 ,5. 6, tablets
						
						emulators /simulators
						
					http/ json 	
automation code ------>  APPIUM  ( server)    ------> devices => android , ios...

{
	comand:"",
	args:"",
}

APP -> Hybrid ==> Java + HTML




Instrumentation Framework - IOS

UI Automation Framework -- Android


INSTALL APPIUM
=============================

 npm install -g appium 
 
 
 desktop version of appium
 
 https://github.com/appium/appium-desktop
 
 https://github.com/appium/appium-desktop/releases/tag/v1.22.3-4
 
 
 
 
HOW TO RUN VIRTUAL DEVICE IN ANDROID STUDIO
====================================================
1. haxm -> install it  from https://github.com/intel/haxm/wiki/Installation-Instructions-on-Windows
2. envable virtauliztaion from BIOS
3. file >settings >sdk tools > haxm install.


ADB Commands
-----------------------

c:\users\<un>\appdata\local\android\sdk\platform-tools

adb devices

C:\Users\mites>adb devices
List of devices attached
emulator-5554   device


adb kill-server

STARTING APPIUM
====================
1. JAVA_HOME , ANDROID_HOME  added correctly

2. host = 0.0.0.0
    port =4723

START SERVER
Appium] Welcome to Appium v1.22.0
[Appium] Non-default server args:
[Appium]   relaxedSecurityEnabled: true
[Appium]   allowInsecure: {
[Appium]   }
[Appium]   denyInsecure: {
[Appium]   }
[Appium] Appium REST http interface listener started on 0.0.0.0: 4723

inspect using appium inspector

download : https://github.com/appium/appium-inspector/releases


Run Appium INspector
----------------------
Remote host = localhost
Repote port = 4723
Remote path = /wd/hub


Desired Capabilities
--------------------------
you have to put emulator details

{
    "platformName": "iOS",
    "platformVersion": "11.0",
    "deviceName": "iPhone 7",
    "app": "/path/to/my.app"
}


platformName  =  iOS, Android, or FirefoxOS

platformVersion = "7.1.1"

deviceName = "Android SDK built for x86"

app = path of apk

appActivity  
appPackage



GAME APP ---->   Activity Name =""   ,  Package =""

If i want to install a new app 
i will use app = <path of new app>


If i want to use existing app
appActivity
app Package



{
	"platformName":"Android",
	"platformVersion":"7.1.1",
	"deviceName":"Android SDK built for x86"
	"app":"c:\xyz\myapp.apk"
}



----------------------

Day 2 Mobile Automation

C:\Users\bhumika.dureja>adb devices
List of devices attached
520041364667958b        device
emulator-5554   device

To install on emulator
adb -s emulator-5554 install C:\Users\bhumika.dureja\Downloads\contactdemo.apk

To install on real device
adb -s 520041364667958b install C:\Users\bhumika.dureja\Downloads\contactdemo.apk
adb -s 520041364667958b install C:\Users\bhumika.dureja\Downloads\ApiDemos-debug.apk




{
    "platformName": "Android",
    "platformVersion": "8.0.0",
    "deviceName": "Galaxy A8 (2018)",
    "app": "/path/to/my.app"
}




I am working on APISemo-Debug API

xpath for text box 
/hierarchy/android.widget.FrameLayout/android.view.ViewGroup/android.widget.FrameLayout[2]/android.widget.LinearLayout/android.widget.TextView


________________________-----------------------------------------
Dependencies for POM>XML
-----------------------------------------
 <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>io.appium</groupId>
            <artifactId>java-client</artifactId>
            <version>7.4.1</version>
        </dependency>
        <dependency>
            <groupId>org.seleniumhq.selenium</groupId>
            <artifactId>selenium-java</artifactId>
            <version>3.141.59</version>
        </dependency>
		
	


---------------------------------------------------------------------------------
DAY 2 NOTES FROM TRAINER
--------------------------------------------------------------------------------
Day 2
----------------------------------------------
dOWNLOAD apK:  https://drive.google.com/file/d/1rNtN1m89NPXOMXPXCDHUupyYsRmdUGdJ/view?usp=sharing
cOMMUNITY LINK:https://community.simplilearn.com/threads/phase-4-learn-mobile-automation-and-cloud-testing-jan-cohort-jun-25-26-jul-2-3-9-10-16-17-23-24-30-31-mitesh-verma.73592/


=============================================
Steps to Run on Real Device
=============================================

1. Enable Developer mode on andriod phone
	- open settings on your phone (android)
	- find vesion > find buid number
	- click build number  multiple times 
	- it will show you popup -> "you have become developer now!!"

2. Enble usb debugging
	- got to dev options
	- enable radio button for usb debugging

3. connect your cellphone (android) with usb port on your pc/laptop

4. a popup will come on android phone to 'Allow USB Debugging'

5. Allow usb debugging

6. cmd > adb devices

adb devices
List of devices attached
8DJFWXXXXXXXX        device

8DJFWXXXXXXXX = serial number

==============================================
How to select a device from adb command using serial number
====================================================
-s SERIAL  use device with given serial (overrides $ANDROID_SERIAL)

8DJFWSSOGEWKKZOR


INSTALL
-----------------------
adb install  <apkpath>


adb install contactdemo.apk
Performing Push Install
adb: error: failed to get feature set: more than one device/emulator

INSTALL USING SERIAL NUMBER
-------------------------------
adb -s <SRNUM> install <APK_PATH>

adb -s emulator-5554 install C:\XYZ\contactdemo.apk


REINSTALL  (-r)
----------------------

adb -s emulator-5554 install  -r C:\XYZ\contactdemo.apk


{
  "platformName": "Android",
  "platformVersion": "11",
  "deviceName": "Saimack or3",
  "app": "D:\\_partisai\\simplilearn\\Phase4\\contactdemo.apk"
}


{
  "platformName": "Android",
  "appium:platformVersion": "11",
  "appium:deviceName": "yourname",
  "appium:app": "D:\\Software and apk\\contactdemo.apk"
}

==================================
inspecting Elements
==================================
	
xpath = 
/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.RelativeLayout/android.view.ViewGroup/android.widget.ListView/android.widget.LinearLayout[1]/android.widget.TextView[1]


Views     -> elements
Layouts  ->  sections (~ div tag in html) wher you willplace elments (views)



package =com.demo.bryanbeale.codetestbryanbeale
text =Bob Barker
resource-id =com.demo.bryanbeale.codetestbryanbeale:id/stringName


COPY ATTRIBUTE TO CLIPBOARD

[{"key":"elementId","value":"00000000-0000-0031-ffff-ffff00000028","name":"elementId"},{"key":"index","value":"0","name":"index"},{"key":"package","value":"io.appium.android.apis","name":"package"},{"key":"class","value":"android.widget.TextView","name":"class"},{"key":"text","value":"","name":"text"},{"key":"content-desc","value":"","name":"content-desc"},{"key":"resource-id","value":"io.appium.android.apis:id/text","name":"resource-id"},{"key":"checkable","value":"false","name":"checkable"},{"key":"checked","value":"false","name":"checked"},{"key":"clickable","value":"true","name":"clickable"},{"key":"enabled","value":"true","name":"enabled"},{"key":"focusable","value":"true","name":"focusable"},{"key":"focused","value":"false","name":"focused"},{"key":"long-clickable","value":"true","name":"long-clickable"},{"key":"password","value":"false","name":"password"},{"key":"scrollable","value":"false","name":"scrollable"},{"key":"selected","value":"false","name":"selected"},{"key":"bounds","value":"[0,280][1440,2224]","name":"bounds"},{"key":"displayed","value":"true","name":"displayed"}]



XAPTH==
/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.TextView


//android.widget.Button


TEXTVIEW	
/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.view.ViewGroup/android.widget.FrameLayout[2]/android.widget.RelativeLayout/android.widget.ListView/android.widget.TextView[3]


FIND ALL TEXT VIEWS
=======================

/hierarchy/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.view.ViewGroup/android.widget.FrameLayout[2]/android.widget.RelativeLayout/android.widget.ListView/android.widget.TextView


//android.widget.TextView  => find me all the texview on the page ( Activity)


[1] id of first text view
00000000-0000-0044-ffff-ffff00000049



==========================================
SWITCHES
===========================================

VIEWS >SWITCHES
-----------------
android.widget.Switch

checked= false   /true

==============================================
VIEWS > SPINNER
============================================

try to change vales of drop downs using "taps"




============================================
RECORDING 
============================================

----------------------------------------------------------------------------------------------------------------------------------------

DAY 3

Run below command to find appPackage & appActivity

dumpsys window windows |  grep  -E 'Focus' -A 1

io.appium.android.apis/io.appium.android.apis.ApiDemos

appPackage  = io.appium.android.apis
appActivity = io.appium.android.apis.ApiDemos


Calculator  == com.android.calculator2/com.android.calculator2.Calculator
appPackage = com.android.calculator2
appActivity = com.android.calculator2.Calculator


---------------------------------------------------------------------------------

Find Elements manual ---- IMPORTANT

https://appium.io/docs/en/commands/element/find-elements/#:~:text=Use%20the%20UI%20Automator%20API,returning%20the%20element%20or%20elements.

---------------------------------------------------------------------------------------

View > Radio Group
Animation > Layout animations


-------------------------------------------------------------------------------------
DAY 3 - TRAINER NOTES
-------------------------------------------------------------------------------------

Day 3
------------------------------------------------


===============================================
Automate the Existing App
===============================================

we need to know TWO properties

com.andoird.app.ClassName

1. appPackage
2. appActivity

How to find these values???

1. open your app in emulator/phone
2. connect using adb  ( android debug bridge)  
	it also helps you to send commands to your phone
	
	- open cmd
	- adb devices ( to see if your device is there connected with PC)
	- adb shell
		example::::
		
			> adb shell                                  // when more than one devices are connected then give adb -s emulator-5554 shell
			generic_x86:/ $  cd etc
			
			$ ls
		acct      bin         config  data_mirror    dev   init.environ.rc  metadata  oem      res      sys         vendor
		adb_keys  bugreports  d       debug_ramdisk  etc   linkerconfig     mnt       proc     sdcard   system
		apex      cache       data    default.prop   init  lost+found       odm       product  storage  system_ext
		

3. dumpsys window windows | grep  -E 'Focus' -A 8

io.appium.android.apis/io.appium.android.apis.ApiDemos

mTopFocusedDisplayId=0
appPackage  = io.appium.android.apis
appActivity = io.appium.android.apis.ApiDemos



Calculator APP
------------------------
 com.google.android.calculator  /  com.android.calculator2.Calculator
 
 
 appPackage=  com.google.android.calculator
 
 appActivity =com.android.calculator2.Calculator
 
 
 
============================ 
Handle Text View
============================


API Demos > Text > LogTextBox   > TextboxElement


Text ->  //android.widget.TextView[@content-desc="Text"]

LogTextBox -> //android.widget.TextView[@content-desc="LogTextBox"]


TextBoxElement ->  /hierarchy/android.widget.FrameLayout/android.view.ViewGroup/android.widget.FrameLayout[2]/android.widget.LinearLayout/android.widget.TextView


============================ 
How to swipe
============================ 
		  TouchAction  touchAction = new TouchAction(driver);
  	
			touchAction
			 .press(PointOption.point(930,2200))
			 .moveTo(PointOption.point(930,432))  
			 .release()
			 .perform();
	
	
	
	::::::code:::::
	 
	  public MobileElement getTextViewByContentDesc(String contentDesc) {
		  
		  	return (MobileElement) driver.findElementByXPath("//android.widget.TextView[@content-desc=\""+ contentDesc +"\"]");
	  }
	  
	  
	  public void SwipeUpLong() {

			touchAction
				 .press(PointOption.point(930,2200))
				 .moveTo(PointOption.point(930,432))  
				 .release()
				 .perform();
	  }

	  public void SwipeUpSmall() {
			touchAction
				 .press(PointOption.point(930,2200))
				 .moveTo(PointOption.point(930,1900))  
				 .release()
				 .perform();

	  }
	  
	  @Test
	  public void putSomethingInTextView() {

		  getTextViewByContentDesc("Views").click();
		  SwipeUpLong();
		  SwipeUpLong();
		  SwipeUpSmall();
		  
	  }

============================ 
Handling switches
============================ 
		  MobileElement switch_customisedText=(MobileElement) driver.findElementByAccessibilityId("Customized text");
		  
		  String isChecked = switch_customisedText.getAttribute("checked");
		  System.out.println("switch status ="+isChecked);
		  
		  
		  switch_customisedText.click();
		  isChecked = switch_customisedText.getAttribute("checked");
		  System.out.println("switch status ="+isChecked);
		  

============================ 
Handling drodown/list
============================ 


		  MobileElement dropdown_colour=(MobileElement) driver.findElementById("android:id/text1");
		  dropdown_colour.click();
		  
		  
//		  /hierarchy/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.ListView/android.widget.CheckedTextView[2]
		  

		  MobileElement dropdown_option_orange=(MobileElement)
				  driver.findElementByXPath("//android.widget.CheckedTextView[@text='orange']");
		  dropdown_option_orange.click();

=========================================
CheckBox Radio Buttons 
=========================================

TODO::;
View > Radio Group
Animation > Layout animations

=========================================
CheckBox Seek Bar 
=========================================




move to 30 number



0--------------------------------------100


width /100   == 1 point

30 * (width /100)  == 30 point


width  = 100
1 point = width /100 = 100/100  = 1 pixel


width  =200
1 point = width /100 = 200/100  = 2 pixel


width  = 1440
1 point = width /100 = 1440/100  = 14.4 pixel



getTextViewByContentDesc("Views").click();
SwipeUpLong();
SwipeUpLong();
getTextViewByContentDesc("Seek Bar").click();

MobileElement seekBar = (MobileElement) driver.findElementById("io.appium.android.apis:id/seek");

int startXPos = seekBar.getLocation().getX();
int yPos = seekBar.getLocation().getY();
int lastXPos = startXPos + seekBar.getSize().getWidth();
int centerXPos = seekBar.getCenter().getX();
System.out.println("startXPos= "+startXPos);
System.out.println("yPos= "+yPos);
System.out.println("lastXPos= "+lastXPos);
System.out.println("centerXPos= "+centerXPos);
		  

---------------------------------------------------------------------------


Day 4

Navigate
1. Click on Views
XPath //android.widget.TextView[@content-desc="Views"]
2. Click on Controls
XPath //android.widget.TextView[@content-desc='Controls']
3. Click on Light Theme
XPath //android.widget.TextView[@content-desc="1. Light Theme"]
Enter Name in text Field
4. 
ID io.appium.android.apis:id/edit   Bhumika

5.
Borrow session from java client

Chckbox:
XPath for CB1
//android.widget.CheckBox[@content-desc="Checkbox 1"]
Click on CB?
Check / UnCheck
checked true / false
io.appium.android.apis:id/radio2
checked true / false

ME for Spinner:     ID
io.appium.android.apis:id/spinner1
ME for text under Spinner ID
android:id/text1
Spinner.findElement()
//android.widget.CheckedTextView[@text='Earth']
1. Print the Default Text
2. Click on Spiner
3. Click on Option
4. Validate the text selected


-------

DAY 5
MobileElement SRC = driver.findElement(By.id("io.appium.android.apis:id/drag_dot_1"));
 MobileElement TGT = driver.findElement(By.id("io.appium.android.apis:id/drag_dot_3"));
 
 
 NOTES
 
 
1. All elements under Light Theme
2. Scroll Up and Down using Windows H and W
3. DragAndDrop   : SRC and TGT 
LongPress SRC MoveTo TGT Release

Scroll till element is found


Use Test
: SRC
TGT

	
Drag and Drop


Navigate to Views > Date Widgets > 1. Dialog
Click on ID io.appium.android.apis:id/pickDate


july

march

get currnt (set in date application)   = August
req (program)  October

if req < currnt
	cnt = currnt - req 
	loop for cnt and click on prev
	
	3 and 6
else
    cnt = req - currnt (2)
	loop for cnt and click on next
	
	
click on date	
//android.view.View[@text="+date+"] 


click on OK



//android.widget.TextView[@text='2030']


Add / Update / Delete Contact

Send Message to a Number
Send Message to a Contact

Phone Call a Number
Phone Call a Contact








--------------------------------------------------------------------------------------------------------------
DAY 5 Sample code
----------------------------------------------------------------------------------------------------------

package appium_demo;

import io.appium.java_client.MobileElement;
import io.appium.java_client.TouchAction;
import io.appium.java_client.android.AndroidDriver;
import io.appium.java_client.touch.offset.PointOption;
import junit.framework.TestCase;
import org.junit.After;
import org.junit.Assert;
import org.junit.Before;
import org.junit.Test;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.List;
import java.util.concurrent.TimeUnit;

import javax.print.attribute.standard.Media;

import org.openqa.selenium.By;
import org.openqa.selenium.Point;
//import org.openqa.selenium.Point;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.touch.TouchActions;
import org.openqa.selenium.remote.DesiredCapabilities;


public class ToggleBtn {

	private AndroidDriver<MobileElement> driver;

	@Before
	public void setUp() throws MalformedURLException {
		DesiredCapabilities desiredCapabilities = new DesiredCapabilities();
		desiredCapabilities.setCapability("platformName", "Android");
		desiredCapabilities.setCapability("appium:platformVersion", "11.0");
		desiredCapabilities.setCapability("appium:deviceName", "Android SDK built for x86");
		desiredCapabilities.setCapability("appium:appPackage", "io.appium.android.apis");
		desiredCapabilities.setCapability("appium:appActivity", "io.appium.android.apis.ApiDemos");
		desiredCapabilities.setCapability("appium:ensureWebviewsHavePages", true);
		desiredCapabilities.setCapability("appium:nativeWebScreenshot", true);
		desiredCapabilities.setCapability("appium:newCommandTimeout", 3600);
		desiredCapabilities.setCapability("appium:connectHardwareKeyboard", true);

		URL remoteUrl = new URL("http://localhost:4723/wd/hub");

		driver = new AndroidDriver<MobileElement>(remoteUrl, desiredCapabilities);

		driver.manage().timeouts().implicitlyWait(10,TimeUnit.SECONDS);


	}

//	@Test
	public void sampleTest() throws InterruptedException {

		driver.findElement(By.xpath("//android.widget.TextView[@content-desc='Views']")).click();
		driver.findElement(By.xpath("//android.widget.TextView[@content-desc='Controls']")).click();
		driver.findElement(By.xpath("//android.widget.TextView[@content-desc=\"1. Light Theme\"]")).click();

		//CTRL +2 , L 
		MobileElement TButton = driver.findElement(By.className("android.widget.ToggleButton"));
		System.out.println(TButton.getAttribute("text"));
		String strText = TButton.getAttribute("text");
		Assert.assertEquals("OFF", strText);
		TButton.click();
		System.out.println(TButton.getAttribute("text"));

	}
	
	
	@Test
	public void testDragDrop() throws InterruptedException {

		driver.findElement(By.xpath("//android.widget.TextView[@content-desc='Views']")).click();
		driver.findElement(By.xpath("//android.widget.TextView[@content-desc='Drag and Drop']")).click();
		
		MobileElement SRC = driver.findElement(By.id("io.appium.android.apis:id/drag_dot_1"));
		MobileElement TGT = driver.findElement(By.id("io.appium.android.apis:id/drag_dot_3"));
		
		TouchAction action = new TouchAction(driver);
		
//		Point center = SRC.getCenter();
		
		Point pntSRC = SRC.getCenter();
		Point pntTGT = TGT.getCenter();
		
		action
	      .longPress(PointOption.point(pntSRC))
	      .moveTo(PointOption.point(pntTGT))
	      .release()
	      .perform();
		
		
		
		
		
		
		
	}
	
	
	@Test
	public void testScroll() throws InterruptedException {

		driver.findElement(By.xpath("//android.widget.TextView[@content-desc='Views']")).click();
//		driver.findElement(By.xpath("//android.widget.TextView[@content-desc='Date Widgets']")).click();
		driver.findElement(By.xpath("//android.widget.TextView[@content-desc='Date Widgets']")).click();
		driver.findElement(By.xpath("//android.widget.TextView[@content-desc='1. Dialog']")).click();
//		
//		io.appium.android.apis:id/pickDate
		driver.findElement(By.id("io.appium.android.apis:id/pickDate")).click();
		driver.findElement(By.id("android:id/date_picker_header_year")).click();
		MobileElement MEYear = driver.findElement(By.id("android:id/date_picker_header_year"));
		String strCrYear = MEYear.getAttribute("text");
		int crYear = Integer.parseInt(strCrYear);
		String strReqYear = "2028";
		int reqYear = Integer.parseInt(strReqYear);
		
		if (reqYear > crYear) {
//			Scroll Up
//			PRINT THE VALES -> TOP LEFT
			
			
			Boolean flgFound = false;
			
			while (!flgFound) {
				List<MobileElement> allYYears = driver.findElements(By.xpath("//android.widget.TextView"));
				for (MobileElement year : allYYears) {
					System.out.println(year.getAttribute("text"));
				}
				
				List<MobileElement> lstReqYr = driver.findElements(By.xpath("//android.widget.TextView[@text='2030']"));
				if (lstReqYr.size()>0) {
					flgFound = true;
					break;
				}
				ScrollUPYear();
				
				
				
			}
			
			driver.findElement(By.xpath("//android.widget.TextView[@text='2030']")).click();
			
			Thread.sleep(5000);
			
			 
			 
			 
			
		}
		
		else{
//			scrollDown
			
		}
		
		
		
		
		
		
	}
	
	
	public void ScrollUPYear() {
		MobileElement MEListYEAR = driver.findElement(By.id("android:id/date_picker_year_picker"));
		int x = MEListYEAR.getLocation().getX();
		int y = MEListYEAR.getLocation().getY();
//		PRINT H AND W
		
		int H = MEListYEAR.getSize().getHeight();
		int W = MEListYEAR.getSize().getWidth();
		
		 int strtX = (int) (x+ (W*0.5));
		  int startY = (int) (y + H*0.9);
		 
		 int endX = strtX;
		 int endY = (int) (y + H*0.1);
		 
		 TouchAction action = new TouchAction(driver);
		
		 action
	      .longPress(PointOption.point(strtX,startY))
	      .moveTo(PointOption.point(endX,endY))
	      .release()
	      .perform();
		 
		 
		
		 
		
	}
		
	
	
		

	@After
	public void tearDown() throws InterruptedException {

		Thread.sleep(1000);

		driver.quit();
	}
}



----------------------------------------------------------------------------------------------------------------------------

DAY 6

-------------------------------------------------------------------------------
Messaging app 

appPackage   =  com.google.android.apps.messaging
appActivity  =  com.google.android.apps.messaging.ui.ConversationListActivity



ID for dialer 
appcom.android.dialer:id/fab


adb reboot -p

----------------------------------------------------------------------------------


Parallel enulator 
node-a11.json
{
  "capabilities": [
    {
      "deviceName": "Android SDK built for x86",
      "platformName": "Android",
      "platformVersion": "11",
      "maxInstances": 1
    }
  ],
  "configuration": {
    "cleanUpCycle": 2000,
    "timeout": 30000,
    "proxy": "org.openqa.grid.selenium.proxy.DefaultRemoteProxy",
    "url": "http://127.0.0.1:5001/wd/hub",
    "host": "127.0.0.1",
    "port": 5001,
    "maxSession": 1,
    "register": true,
    "registerCycle": 5000,
    "hubPort": "4444",
    "hubHost": "127.0.0.1"
  }
}


node-a7.json
-----------------------------
{
  "capabilities": [
    {
      "deviceName": "Pixel_5_And_7",
      "platformName": "Android",
      "platformVersion": "7.1.1",
      "maxInstances": 1
    }
  ],
  "configuration": {
    "cleanUpCycle": 2000,
    "timeout": 30000,
    "proxy": "org.openqa.grid.selenium.proxy.DefaultRemoteProxy",
     "url": "http://127.0.0.1:5000/wd/hub",
    "host": "127.0.0.1",
    "port": 5000,
     "maxSession": 1,
    "register": true,
    "registerCycle": 5000,
   "hubPort": "4444",
   "hubHost": "127.0.0.1"
  }
}


--------------------------------
Dialer TEST
real devide
dumpsys command : com.samsung.android.contacts/com.android.dialer.DialtactsActivity

appPackage  : com.samsung.android.contacts
appActivity : com.android.dialer.DialtactsActivity


Emulator : com.google.android.dialer/com.google.android.dialer.extensions.GoogleDialtactsActivity

appPackage  : com.google.android.dialer
appActivity : com.google.android.dialer.extensions.GoogleDialtactsActivity


-----------------------------------------------------------------------------------
DAY 6 TRAINER NOTES
---------------------------------------------------------------------------------
5
---------------
res id =android:id/numberpicker_input
text =5
index =1


6
---------------
res id =android:id/numberpicker_input
text =6
index =1


4               index =0
------
5                index = 1
------ 
6                index = 2




//*[@resource-id='android:id/numberpicker_input']  => it will give us all 3 elements present on screen


/hierarchy/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.LinearLayout/android.widget.FrameLayout/android.widget.FrameLayout/android.widget.TimePicker/android.widget.LinearLayout/android.widget.LinearLayout/android.widget.NumberPicker[1]/android.widget.Button[1]


android.widget.FrameLayout//android.widget.NumberPicker[1]



(//android.widget.TimePicker//android.widget.NumberPicker)[1]
(//android.widget.TimePicker//android.widget.NumberPicker)[1]//android.widget.Button



MobileElement SRC = (MobileElement) driver.findElementByXPath("//android.widget.NumberPicker[1]/android.widget.Button[2]");
MobileElement TRG = (MobileElement) driver.findElementByXPath("//android.widget.LinearLayout/android.widget.LinearLayout/android.widget.NumberPicker[1]/android.widget.EditText");



CenterButton text =1
CenterButton position X =232
CenterButton position Y =995


DownButton text =2
DownButton position X =232
DownButton position Y =1127



CenterButton text =1
CenterButton position X =320
CenterButton position Y =1061


DownButton text =2
DownButton position X =320
DownButton position Y =1218


y-> 1218    ->  900

===============================================================================

Parallel tests in Appium
================================================================================


GRID
----------

Selenium GRID helps you to run paralel tests

GRID --> HUB  ,NODE

---------------------
STEP::1
---------------------

1. Downlod the Grid jar -> Selenium grid
https://www.selenium.dev/downloads/



---------------------
STEP::2
---------------------

2.   start hub

3.141 version
java -jar selenium-server-standalone-3.141.59.jar -role hub

4.0+ version
java -jar selenium-server-4.3.0.jar hub



3.14++
------------------


D:\sotwares\Seleniu-server>java -jar selenium-server-standalone-3.141.59.jar -role hub
11:48:35.266 INFO [GridLauncherV3.parse] - Selenium server version: 3.141.59, revision: e82be7d358
11:48:35.346 INFO [GridLauncherV3.lambda$buildLaunchers$5] - Launching Selenium Grid hub on port 4444
2022-07-23 11:48:35.698:INFO::main: Logging initialized @608ms to org.seleniumhq.jetty9.util.log.StdErrLog
11:48:36.542 INFO [Hub.start] - Selenium Grid hub is up and running
11:48:36.543 INFO [Hub.start] - Nodes should register to http://localhost:4444/grid/register/
11:48:36.544 INFO [Hub.start] - Clients should connect to http://localhost:4444/wd/hub


Clients= emulator , node


open =  http://localhost:4444/

Selenium Grid Hub v.3.141.59
Whoops! The URL specified routes to this help page.

For more information about Selenium Grid Hub please see the docs and/or visit the wiki.
 Or perhaps you are looking for the Selenium Grid Hub console.

Happy Testing!



Grid console
----------------------

http://localhost:4444/grid/console



---------------------
STEP::3
---------------------

I will add two emulators as nodes to hub


two json files->  one for emulator1  --- android 7
				  one for emulator2  --- andoird 11


node-a7.json
-----------------------------
{
  "capabilities": [
    {
      "deviceName": "Pixel_5_And_7",
      "platformName": "Android",
      "platformVersion": "7.1.1",
      "maxInstances": 1
    }
  ],
  "configuration": {
    "cleanUpCycle": 2000,
    "timeout": 30000,
    "proxy": "org.openqa.grid.selenium.proxy.DefaultRemoteProxy",
 	"url": "http://127.0.0.1:5000/wd/hub",
    "host": "127.0.0.1",
    "port": 5000,
 	"maxSession": 1,
    "register": true,
    "registerCycle": 5000,
   "hubPort": "4444",
   "hubHost": "127.0.0.1"
  }
}


node-a11.json

{
  "capabilities": [
    {
      "deviceName": "Android SDK built for x86",
      "platformName": "Android",
      "platformVersion": "11",
      "maxInstances": 1
    }
  ],
  "configuration": {
    "cleanUpCycle": 2000,
    "timeout": 30000,
    "proxy": "org.openqa.grid.selenium.proxy.DefaultRemoteProxy",
    "url": "http://127.0.0.1:5001/wd/hub",
    "host": "127.0.0.1",
    "port": 5001,
    "maxSession": 1,
    "register": true,
    "registerCycle": 5000,
    "hubPort": "4444",
    "hubHost": "127.0.0.1"
  }
}

---------------------
STEP::4
---------------------

appium server > advanced > Node Config File Path json =   D:\sotwares\Seleniu-server\node-a7.json



Appium successfully registered with the the grid on http://127.0.0.1:4444



A11 - dialer appp

com.android.dialer/com.android.dialer.main.impl.MainActivity}


---------------------
STEP::5
---------------------

Execute the test cases by providing required capabilites


---------------------------
Flipkart App
-----------------------------

Step 1:
Download flipkart apk from  https://downloads.digitaltrends.com/flipkart/android

Step 2:
Install it on android device

adb install apk
adb  install apk

adb -s emulator-5554 install <apkfilepath>

		adb -s emulator-5554 install Flipkart-7.18.apk
		Performing Streamed Install
		Success



Step 3:
Find app package and app activity


> adb -s emulator-5554 shell
generic_x86:/ $ dumpsys window |grep 'Focus'
    mFocusedWindow=Window{9874057 u0 com.flipkart.android/com.flipkart.android.activity.HomeFragmentHolderActivity}
	
	
	com.application.zomato/com.application.zomato.login.ZomatoActivity
	
	
	appPackage = com.flipkart.android
	appActivity = com.flipkart.android.activity.HomeFragmentHolderActivity


Step 3:

open app with Appium inspector
and find xpaths for elements = 


1. select english = //android.widget.RelativeLayout[4]//android.widget.ImageView[1]
2. click continue - id = 	com.flipkart.android:id/select_btn
3. close button - id = com.flipkart.android:id/custom_back_icon

4. tap on search box = id => com.flipkart.android:id/search_widget_textbox

5. enter text = id => 	com.flipkart.android:id/search_autoCompleteTextView



--------------------------------------------------------------------------------------------------------------------
DAY 7
_______________________________________________________________________________


Download Flipkart APP : downloads.digitaltrends.com/flipkart/android

Direct download link : https://downloads.digitaltrends.com/flipkart/android/post-download#

install app 
adb -s emulator-5554 install C:\Users\bhumika.dureja\Downloads\Flipkart-7.18(1).apk


Flipkart com.flipkart.android/com.flipkart.android.activity.FirstLaunchActivity

appPackage  : com.flipkart.android
appActivity : com.flipkart.android.activity.FirstLaunchActivity

MobileElement el2 = (MobileElement) driver.findElementById("com.flipkart.android:id/select_btn");  for Continue button



-----

AWS

Download kepPair -> .ppk file 

IPV4 
ec2-54-227-208-174.compute-1.amazonaws.com

Putty > SSH > AUTH => select the private key

Login user on putty 
ec2-user

Run command after login on putty screen -- gives us all the block sizes
lsblk

------
MOUNT VOLUME
------

create folder to mount   ==>  sudo mkdir /nv1
create file system   ==>  sudo mkfs -t ext4 /dev/xvdf
  mount ===>   sudo mount /dev/xvdf /nv1

----------------------------------------------------------------------
DAY 7 TRAINER NOTES_____
_______________________________________________________________________________
Phad4 - Day 7


LABS  >>  AWS  >>. LAUNCH



IMP: Dear learner,
Please note: This lab is configured based on the curriculum covered during the live virtual classes.
All details pertaining to the exercises in this lab are provided in the e-books available in your LMS account.

Resource Limitations:

- Region: Use only US East (N Virginia), us-east-1, us-east-2. Other Regions may be selectable, but most actions will fail.

- AMI type: Free tier eligible only

- EC2 Instance Types: Only t2.micro, t3.micro are allowed. 

- You can only launch on-demand instances. Reserved / Spot instances are NOT allowed.

- Block Storage (EBS / VS): Max size allowed is 30 GB. If the size exceeds, the launch will fail. 

- Allowed EBS Types: GP2, Standard.

- Security Groups: Create new Security Groups for each session. Old ones will get deleted.

- RDS database class: db.t2.micro will be allowed.

-------------------------------------------------


EC2  --   Elastic Compute cloud  ( virtual machine )
EBS  --   Elastic BLock Storage
S3   ---  Simple Storage Service


Creating Account on AWS
---------------------------
https://aws.amazon.com/



1. Creating EC2 machine

---> Amazon linux
	 t2 micro  as instance type
	 Login ->     key value pair
					private key /public key setup
					
					file 1  == private key   -->  you will download and keep safe with you
					file 2  == public key   -> store it in the ec2 machine
					
					private key = passsowrd
				
				
				login -> upload private key via putty   -> AWS will match private key with public key 
							if matches => allow you to login

	Netowrk
			create default security group
	
	Storage
			
			
Success
Successfully initiated launch of instance (i-02f756203de2ecaf9)


IP:  ec2-3-86-220-16.compute-1.amazonaws.com
Putty > SSH > AUTH => select the private key
login :  ec2-user



[ec2-user@ip-172-31-92-103 ~]$ lsblk
NAME    MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
xvda    202:0    0   8G  0 disk
└─xvda1 202:1    0   8G  0 part /


------------------------
Create Volume
------------------------
left menu > elastic block store  > Volumes  

select gp2
select size = 30gb

click create volume


------------------------
Attach Volume
------------------------
02f756203de2ecaf9

open volume > Action >Attach volume

/dev/xvdf

[ec2-user@ip-172-31-92-103 ~]$ lsblk
NAME    MAJ:MIN RM SIZE RO TYPE MOUNTPOINT
xvda    202:0    0   8G  0 disk
└─xvda1 202:1    0   8G  0 part /
xvdf    202:80   0  30G  0 disk

----------------------
mount volume
---------------------
create folder to mount   ==>  sudo mkdir /nv1
create file system   ==>  sudo mkfs -t ext4 /dev/xvdf
  mount ===>   sudo mount /dev/xvdf /nv1



___________________________________________________________________________

DAY 8 - 30Th July 2022
_---------------------------------------------------------------------

bucket name : sl-bucket-bd
Tags: Key - SLBucket ; Value - SLbucketname

s3://sl-bucket-bd

Upload succeeded
View details below.

s3://sl-bucket-bd/Phase4-Day-7.txt

https://sl-bucket-bd.s3.amazonaws.com/Phase4-Day-7.txt


=====================
Enable public access
=====================
go to permission tab
1. Block public access (bucket settings)   should be unchecked (disabled)
2. Object Ownership  => Enable ACL   => ownership = Bucket owner preferred  => You who created bucket will be owner of objects
3. open the object ( clicking on it)
4. click objeccActions => make public using ACL
5. click make public


https://sl-bucket-bd.s3.amazonaws.com/Phase4-Day-7.txt

DOCKER

https://hub.docker.com/search?q=

ec2-3-94-90-148.compute-1.amazonaws.com

Installing Docker
1. sudo yum update -y
2. sudo amazon-linux-extras install docker
3. sudo service docker start
4. docker --version

Docker version 20.10.13, build a224086


If we don't want to put sudo in each command then give this first -> sudo su -
either sudo su - (and then you don't need to type sudo everytime) or type sudo before each command

1. sudo docker pull hello-world   -- create image and run hello world
2. sudo docker images -- to verify if image is present/created
3. sudo docker run hello-world -- To create container
4. sudo docker ps -a (will show you all containers)
and sudo ps -a will give latest running container

 sudo docker run --name mylinux_1 ubuntu  ( To install latest Ubuntu container and give name to it)

CONTAINER ID   IMAGE         COMMAND    CREATED              STATUS                          PORTS     NAMES
5bb5dbf55138   ubuntu        "bash"     About a minute ago   Exited (0) About a minute ago             mylinux_1
77b201a95ed1   hello-world   "/hello"   9 minutes ago        Exited (0) 9 minutes ago                  optimistic_carson


To keep running container in background

docker run --help
-d will run in detach mode 
-t will allocate psuedo tty => terminal 

sudo docker run --name mylinux_2 -dit ubuntu /bin/bash -- returns id of container which was running 
  >>> d717c4e489899435294444a00943143a1d6d194b5683fddf4d0ed677192460b6

run >> sudo docker ps  

To connect->attach the container

>> sudo docker attach mylinux_2
root@d717c4e48989:/#

i = interactive mode
sudo docker run --name mylinux_3 -it ubuntu  /bin/bash

To detach the container
 sudo docker run --name mylinux_4 -dit ubuntu  /bin/bash


To attach it againsudo docker attach mylinux_4
sudo docker attach mylinux_4
root@c2df2055078a:/# ls
bin  boot  dev  etc  home  lib  lib32  lib64  libx32  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@c2df2055078a:/# exit   (must exit to stop the container)
exit


[ec2-user@ip-172-31-85-2 ~]$ sudo docker ps    (no running container)
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES


[ec2-user@ip-172-31-85-2 ~]$ sudo docker ps -a     (See below all the containers are exited)
CONTAINER ID   IMAGE         COMMAND       CREATED          STATUS                       PORTS     NAMES
c2df2055078a   ubuntu        "/bin/bash"   5 minutes ago    Exited (0) 4 minutes ago               mylinux_4
c796d5a649b6   ubuntu        "/bin/bash"   6 minutes ago    Exited (0) 6 minutes ago               mylinux_3
d717c4e48989   ubuntu        "bash"        35 minutes ago   Exited (137) 9 minutes ago             mylinux_2
5bb5dbf55138   ubuntu        "bash"        40 minutes ago   Exited (0) 40 minutes ago              mylinux_1
77b201a95ed1   hello-world   "/hello"      49 minutes ago   Exited (0) 49 minutes ago              optimistic_carson


---------------------------------------------------------------------------------------------------------------
DAY 8 - TRAINER NOTES
-------------------------------------------------------------------------------------

Day 8- Phase 2

--------------
AWS
-------------

S3
-------------
Simple storage service

object storage service  === everthing stored as objects  , versions 


Bucket =>  [  object1,obj2........]


pricing url =  https://aws.amazon.com/s3/pricing/?nc=sn&loc=4
bucket naming rules = https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html



label/Tags
SLbucketName = p4july2022


Successfully created bucket "sl-p4-july-22-1"
To upload files and folders, or to configure additional bucket settings choose View details.


s3://sl-p4-july-22-1
s3://sl-p4-july-22-1/Phase4-Day-8.txt



Upload succeeded
View details below.




=====================
Enable public access
=====================
goto bucket permissions tab>>>>
1. Block public access (bucket settings)  => should be unchecked (disabled)
2. Object Ownership  => Enable ACL   => ownership = Bucket owner preferred  => You who created bucket will be owner of objects

3. open the object ( clicking on it)
4. click objeccActions => make public using ACL
5. click make public
Successfully edited public access
View details below.

https://sl-p4-july-22-1.s3.amazonaws.com/Phase4-Day-8.txt



Setting up jenkins on AWS EC2 Machine
-----------------------------------------


DOCKER
---------------

Installing the docker
----------------------------

1. sudo yum update -y

2. sudo amazon-linux-extras install docker


3. sudo service docker start


4. docker --version


[ec2-user@ip-172-31-92-15 ~]$ docker --version
Docker version 20.10.13, build a224086


================
install on windows = https://docs.docker.com/desktop/install/windows-install/


============================
See all containers
============================
docker ps

[ec2-user@ip-172-31-92-15 ~]$ sudo docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES



CREATE AN CONTAINER
=======================n


1. pull an image from docker hub
2. run a new container using that image

or

1. run a new container with an image 
          ----------------------------------> image pull already  -> create container
		  ----------------------------------> image not found    --> download image automatically  -> create container



1. pull
==>   docker pull <imagename>  
imagename => hub.docker.com



hello-world image  => linux based image which will print "hellp world" on console



docker pull hello-world
[ec2-user@ip-172-31-92-15 ~]$ sudo docker pull hello-world
Using default tag: latest
latest: Pulling from library/hello-world
2db29710123e: Pull complete
Digest: sha256:53f1bbee2f52c39e41682ee1d388285290c5c8a76cc92b42687eecf38e0af3f0
Status: Downloaded newer image for hello-world:latest
docker.io/library/hello-world:latest


hello-world : v1
hello-world : v2
hello-world : v3

hello-world : latest


[ec2-user@ip-172-31-92-15 ~]$ sudo docker images
REPOSITORY    TAG       IMAGE ID       CREATED         SIZE
hello-world   latest    feb5d9fea6a5   10 months ago   13.3kB



2. Create container  -> RUN
docker run <imagename>  
 -> create new container
 -> install the image in the container  
 -> run it ( run the default program)
 -> stop the container
 
 
 
sudo docker run hello-world




3. view all containers
--------------------

>> sudo docker ps -a

CONTAINER ID   IMAGE         COMMAND    CREATED              STATUS                          PORTS     NAMES
6f66a30ff66d   hello-world   "/hello"   About a minute ago   Exited (0) About a minute ago             ecstatic_wozniak




use root user  in linux=>  sudo su -



=========================
delete containers
=========================

CONTAINER ID   IMAGE         COMMAND    CREATED         STATUS                     PORTS     NAMES
d3bc3d2f3eeb   hello-world   "/hello"   6 seconds ago   Exited (0) 5 seconds ago             nifty_wu
6f66a30ff66d   hello-world   "/hello"   2 minutes ago   Exited (0) 2 minutes ago             ecstatic_wozniak


>>>> docker rm containter_id

docker rm d3bc3d2f3eeb

docker rm ecstatic_wozniak


===================================
Craete container with custom name
=================================


install ubuntu linux

docker run  --name mylinux_1  ubuntu


[root@ip-172-31-92-15 ~]# docker ps -a
CONTAINER ID   IMAGE     COMMAND              CREATED          STATUS                      PORTS     NAMES
d326ed602620   ubuntu    "bash"               17 seconds ago   Exited (0) 16 seconds ago             mylinux_1



KEEP RUNNING CONTAINER IN BACKGROUND
-----------------------------------------

docker run --help

-d  = run in detach mode
-t = allocate psudeo tty  => terminal

>>>>> docker run --name mylinux_2  -dit  ubuntu /bin/bash
2f2a076c02bfb83a72bd9e30feb4f62ebe04d8814f5af0b412dfbd0c7226c109
-- returns id of container which was running

2f2a076c02bf   ubuntu    "bash"               About a minute ago   Up About a minute                    mylinux_2


connect -> attach

>> docker attach id/name
 docker attach mylinux_2
 
>>> [root@ip-172-31-92-15 ~]# docker attach mylinux_2
root@2f2a076c02bf:/#


i = interactive mode 
docker run --name linux_2  -it  ubuntu /bin/bash







when you login in ec2 machine with ec2-user

[ec2-user@ip-172-31-92-15 ~]$



when you put sudo su -

[ec2-user@ip-172-31-92-15 ~]$ sudo su -
Last login: Sat Jul 30 07:15:02 UTC 2022 on pts/1
[root@ip-172-31-92-15 ~]#

NO NEED TO PUT SUDO


docker run  --name myname_1 -it ubuntu /bin/bash

root@694c3595e3ff:/# .......



stop AND Delete
-----------------------
stop => docker stop id/name
remove => docker rm id/name

-------------------------------------------------------------------------------------------------------

DAY - 9 31st July 2022
----------------------------------------------------------------------------------------------
yum
apk

First install docker
1. sudo yum update -y
2. sudo amazon-linux-extras install docker
3. sudo service docker start
4. docker --version


Then go to into root folder ---->   sudo su - 

Then create images and Docker files

mkdir myimages
cd myimages
vi
vi Dockerfile

Copy paste below commands
FROM alpine
RUN apk update
RUN apk add curl
-------------------------

vi Dockerfile
press "i"  -> enable insert mode
write /copy/paste in the file
save --->      press "escape" 
            press colon " : "
            type "wq"
            enter
---------------------

dir Dockerfile
cat Dockerfile


docker build -t dev_image .

docker images

REPOSITORY   TAG       IMAGE ID       CREATED          SIZE
dev_image    latest    d01fff08a02e   14 seconds ago   10.1MB
alpine       latest    d7d3d98c851f   12 days ago      5.53MB
[root@ip-172-31-18-131 myimages]#


---------
Vi Dockerfile
FROM alpine
RUN apk update
RUN apk add curl

CMD echo "hello phase 4 students"



docker build -t dev_image2 .


docker images
docker run dev_image2

VI Dockerfile
CURL http://reqres.in/api/users?page=2

docker build -t dev_image3 .
docker run dev_image3


-----------------------------
Selenium using docker
-------------------
https://hub.docker.com/

Port opened

docker run -d -p 4444:4444 --shm-size="2g" --name sel-ff-standalone selenium/standalone-firefox:4.3.0-20220726

Status: Downloaded newer image for selenium/standalone-firefox:4.3.0-20220726
4f653045a3d62b0e220e527072ec64242ec051924dab6f7ec0c8b2e37dbd18c4

http://ec2-3-91-68-222.compute-1.amazonaws.com:4444/ui   -- Selenium grid is now running

docker ps

CONTAINER ID   IMAGE                                        COMMAND                  CREATED              STATUS              PORTS                                                 NAMES
4f653045a3d6   selenium/standalone-firefox:4.3.0-20220726   "/opt/bin/entry_poin…"   About a minute ago   Up About a minute   0.0.0.0:4444->4444/tcp, :::4444->4444/tcp, 5900/tcp   sel-ff-standalone




ECLIPSE CODE

DesiredCapabilities caps = DesiredCapabilities.firefox();
        URL hubUrl=new URL("http://ec2-52-90-177-179.compute-1.amazonaws.com:4444/wd/hub");
        
        System.out.println("connecting ....");
        RemoteWebDriver driver = new RemoteWebDriver(hubUrl,caps);
        
        
        System.out.println("starting test....");
        driver.get("http://www.yahoo.com");
        System.out.println("title= "+ driver.getTitle());
        System.out.println("finished test....");
        
        Thread.sleep(60000);
        driver.quit();
        
        System.out.println("driver quit....");
		
	---------------------------------	
		
MULTIPLE NODES
 
 
1. docker network create selgrid    -- to create the selgrid
2. docker network ls    ---  To list network selgrid
3. docker ps
4. stope & remove any previous node
docker stop <node name>
docker rm <node name>

5. Setup hub
docker run -d --net selgrid  -p 4442-4444:4442-4444  --name selenium-hub selenium/hub:4.1.1-20220121

6. Add Chrome Node (Node 1)
docker run -d --net selgrid --name node-chrome -e SE_EVENT_BUS_HOST=selenium-hub --shm-size="2g" -e SE_EVENT_BUS_PUBLISH_PORT=4442  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 selenium/node-chrome:4.1.1-20220121

7. Add Firefox node(Node 2)
docker run -d --net selgrid --name node-firefox -e SE_EVENT_BUS_HOST=selenium-hub --shm-size="2g" -e SE_EVENT_BUS_PUBLISH_PORT=4442  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 selenium/node-firefox:4.1.1-20220121


------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
DAY 9 TRAINER Notes
-------------------------------------------------------------------------------------------------------------------------------

Day 9
================================


Build Docker images
--------------------

base images -> alpine ,ubuntu images ,.....

1) base OS - linux, fedora, ubuntu, windows, mac

2) base OS  - raw/blank/fresh/ OS
	install -> download curl command
	intall  -> download those lib
	         -> setup some configuration in a some setting files
			 -> netowrk rules connections
			 -> putty should be there
    install -> sql server
	         -> setup sql server with basic tables..
			 
			-> webservice
			
			
my_sel_hub_image=		
 selenium hub image=>	base os(linux)-> install docker ( 3-4 commands) -> setup a selenium hub on specfic ports

docker run my_sel_hub_image

yum 
apk

HOW
---------------
file = Dockerfile

keywords-> FROM ,RUN ,CMD

FROM <baseimage>

FROM alpine
RUN apk update
RUN apk add curl

1) docker run  --name m2 -it alpine /bin/sh
2) apk update
3) apk add curl


command to build image from Docker file
---------------------------------------
1. go to the folder where "Dockerfile" is present
2. docker build -t dev_image .

-t = tag

Example::

# docker build -t dev_image .



Sending build context to Docker daemon  2.048kB
Step 1/3 : FROM alpine
 ---> d7d3d98c851f
Step 2/3 : RUN apk update
 ---> Running in 79ff0c4f255d
fetch https://dl-cdn.alpinelinux.org/alpine/v3.16/main/x86_64/APKINDEX.tar.gz
fetch https://dl-cdn.alpinelinux.org/alpine/v3.16/community/x86_64/APKINDEX.tar.gz
v3.16.1-68-gd8ee2e3523 [https://dl-cdn.alpinelinux.org/alpine/v3.16/main]
v3.16.1-69-gb020b59548 [https://dl-cdn.alpinelinux.org/alpine/v3.16/community]
OK: 17027 distinct packages available
Removing intermediate container 79ff0c4f255d
 ---> dfc2d706e15e
Step 3/3 : RUN apk add curl
 ---> Running in 17b9ad4b1e22
(1/5) Installing ca-certificates (20211220-r0)
(2/5) Installing brotli-libs (1.0.9-r6)
(3/5) Installing nghttp2-libs (1.47.0-r0)
(4/5) Installing libcurl (7.83.1-r2)
(5/5) Installing curl (7.83.1-r2)
Executing busybox-1.35.0-r15.trigger
Executing ca-certificates-20211220-r0.trigger
OK: 8 MiB in 19 packages
Removing intermediate container 17b9ad4b1e22
 ---> aec4d69d4aae
Successfully built aec4d69d4aae
Successfully tagged dev_image:latest
[root@ip-172-31-86-243 myimages]#



vi editor:
-------------------
vi Dockerfile
press "i"  -> enable insert mode
write /copy/paste in the file

save --->  	press "escape" 
			press colon " : "
			type "wq"
			enter
             
			 

RUn a default command when we run container
-------------------------------------------

CMD

FROM alpine
RUN apk update
RUN apk add curl

CMD echo "hello phase 4 students"


>>> docker build -t dev_image2 .


Sending build context to Docker daemon  3.072kB
Step 1/4 : FROM alpine
 ---> d7d3d98c851f
Step 2/4 : RUN apk update
 ---> Using cache
 ---> dfc2d706e15e
Step 3/4 : RUN apk add curl
 ---> Using cache
 ---> aec4d69d4aae
Step 4/4 : CMD echo "hello phase 4 students"
 ---> Running in 458c68a47db9
Removing intermediate container 458c68a47db9
 ---> 8c0d6622ff9b
Successfully built 8c0d6622ff9b
Successfully tagged dev_image2:latest






perftests

1. ubuntu
2. git i downloaded the repo  ,, RUN git clone ....
3.  curl command i downloaded jmter ..  RUN curl......
4. unzip jmeter project
5. CMD jmeter -s path



docker run perf_tests

=======================================
Selenium using docker
=======================================
2 types of setup

1. using standlone testing for a browser

   image =>
			downloaded selenium server jar -> started hub at 4444
			they registerd one browser to that hub
			      ( donwloaded the browser -> setup it
				   using selenium jar file they created a node and 
				   attached the node to hub)
	
hub , node -> hub



standalone image with firefox
------------------------------
https://github.com/SeleniumHQ/docker-selenium

https://hub.docker.com/r/selenium/standalone-firefox


selenium/standalone-firefox

docker run -d -p 4444:4444 --shm-size="2g" --name sel-ff-standalone selenium/standalone-firefox:4.3.0-20220726


Enable port on ec2
---------------------------
ec2 machine > security > security group > edit group 
		
			> add rule 
			> allow all tcp (or give specific port number)





		DesiredCapabilities caps = DesiredCapabilities.firefox();
		URL hubUrl=new URL("http://ec2-52-90-177-179.compute-1.amazonaws.com:4444/wd/hub");
		
		System.out.println("connecting ....");
		RemoteWebDriver driver = new RemoteWebDriver(hubUrl,caps);
		
		
		System.out.println("starting test....");
		driver.get("http://www.yahoo.com");
		System.out.println("title= "+ driver.getTitle());
		System.out.println("finished test....");
		
		Thread.sleep(60000);
		driver.quit();
		
		System.out.println("driver quit....");
		


2. NODE AND HUB SETUP
--------------------------------------------
create virtual network

docker network create selgrid

docker network ls


docker network --help


selgrid network
----------------
-p container_port   :   host_machine_port
-p 4444:4444
-p  4440-4445    : 4440-4445


docker run -d --net selgrid  -p 4442-4444:4442-4444  --name selenium-hub selenium/hub:4.1.1-20220121

4442-4444  => 4442   4443  4444

add node
----------------

docker run -d --net selgrid --name node-chrome -e SE_EVENT_BUS_HOST=selenium-hub --shm-size="2g" -e SE_EVENT_BUS_PUBLISH_PORT=4442  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 selenium/node-chrome:4.1.1-20220121

--shm-size="2g" 

-e SE_EVENT_BUS_HOST=selenium-hub 
-e SE_EVENT_BUS_PUBLISH_PORT=4442
  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 



FF NODE
-------------------

docker run -d --net selgrid --name node-firefox -e SE_EVENT_BUS_HOST=selenium-hub --shm-size="2g" -e SE_EVENT_BUS_PUBLISH_PORT=4442  -e SE_EVENT_BUS_SUBSCRIBE_PORT=4443 selenium/node-firefox:4.1.1-20220121





-----------

DEV_IMAGE2
FROM alpine
RUN apk update
RUN apk add curl
CMD echo "hello phase 4 students"




QA_IMAGE--->

FROM DEV_IMAGF2
RUN some setup comands
CMD commads

------------------------------------------------------------------------------------------------

6th Aug 2022

docker run -p 8080:8080 -p 50000:50000 jenkins:2.60.3    --->>> old, not working properly instead use other command, the one witth jdk11
06f80e3861244590b02c5d81adef5443


1. sudo yum update -y
2. sudo amazon-linux-extras install docker
3. sudo service docker start
4. docker --version

5. sudo docker run -p 8080:8080 -p 50000:50000 jenkins:2.60.3  (instead use below command , the one with jdk11)

password - 10b663478dfe4c078cf8419a02770034
 
 ON EC2

sudo docker run -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11
8e51cc2555714ae898c50cf749fd66f6




---------------------------------

Swiggy APP 
desiredCapabilities.setCapability("appium:appPackage", "in.swiggy.android");
    desiredCapabilities.setCapability("appium:appActivity", "in.swiggy.android.activities.HomeActivity");
	
adb -s emulator-5554 install C:\Users\bhumika.dureja\Downloads\swiggy-4-0-4(1).apk


in.swiggy.android/in.swiggy.android.activities.NewUserExperienceActivity


GEtStarted CTA (ID) - in.swiggy.android:id/tv_primary_cta
bhumikadureja@gmail.com


https://hub.docker.com/r/antonienko/android-emulator

https://aws.amazon.com/blogs/mobile/testing-mobile-apps-with-cucumber-and-appium-through-testng-on-aws-device-farm/

So, as part of project submission we need to 
a) Automnate Swiggy/zomato/flipkart app 
b) Run it using browser stack


------------------------------------------------------------------------------------------------------------------------------------
DAY 10 TRAINER NOTES - 6th Aug
--------------------------------------------------------------------------------------------------------------------------------
Day 10 Phase -4
===========================================


AWS - EC2
CI CD
JENKINS
DOCKER
Cloud based mobile applications using appium

Jenkins in EC2 Machine
Docker in EC2 Machine


WHAT TO DO
-------------------
1. create maven project for swiggy app -   Eclipse / appium 
2. appium script                       -   Eclipse /appium  ( testng + appium + eclisp...)
3. you can create AWS account          - 
4. IAM
5. setup ssh to connect to ec2
6. create IAM user 
7. setup jenkins in EC2
8. setup docker
9. setup jenkins pipeline


you can create AWS account
------------------------------
AWS  -> EC2
           -> downloading docker
								-> install jenkins         from  commandline
								-> insatll appium server  ( via npm ) from commandline
								-> connect device 	--> device has to be connected with ec2
												
													-->  have a windows based EC2 machine 
																			=> android studio -> start emulator 
													-->  linux EC2->
                                                                  online emulators ( browserstack , saucelabs ...)
																  aws device farm ....
																  
																  
		          ---> do everthing on local ( creating project ,local-emulator, appium.... , install jenkins on local    docker)
										
										
--------------------------------------
install jenkins on docker
--------------------------------------
ec2
local
any machine which have docker.


docker run -p 8080:8080 -p 50000:50000 jenkins  - latest not working

tags == https://hub.docker.com/_/jenkins?tab=tags

docker run -p 8080:8080 -p 50000:50000 jenkins:2.60.3  - not working


docker run -p 8080:8080 -p 50000:50000 --restart=on-failure jenkins/jenkins:lts-jdk11


docker stop <container name>


ec2 docker install
--------------------------

sudo yum update -y
sudo amazon-linux-extras install docker -y
sudo service docker start
docker --version

****jenkins on ec2....
**** connecting with windows machine



connect with swiggy app
---------------------------------
appActivity
appPackage


app


1|generic_x86:/ $ dumpsys window |grep 'Focus'
    mFocusedWindow=Window{f539439 u0 com.google.android.apps.nexuslauncher/com.google.android.apps.nexuslauncher.NexusLauncherActivity}
    mFocusedApp=Token{3a163cd ActivityRecord{6e63564 u0 com.google.android.apps.nexuslauncher/.NexusLauncherActivity t203}}
  mCurrentFocus=Window{f539439 u0 com.google.android.apps.nexuslauncher/com.google.android.apps.nexuslauncher.NexusLauncherActivity}
  mFocusedApp=AppWindowToken{88343d0 token=Token{3a163cd ActivityRecord{6e63564 u0 com.google.android.apps.nexuslauncher/.NexusLauncherActivity t203}}}
generic_x86:/ $





curl -u "webofthefur_vCDP7J:pzcJdDJa5C6iqLLGuUDZ" -X POST "https://api-cloud.browserstack.com/app-automate/upload" -F "file=@D:\_partisai\simplilearn\Phase4\Software and apk\ContactDemo.apk"


{"app_url":"bs://432172a2ff35380e248c808cf753807d9b85d838"}    


http://hub.browserstack.com/wd/hub



AWS Farm
---------------------------
https://aws.amazon.com/blogs/mobile/testing-mobile-apps-with-cucumber-and-appium-through-testng-on-aws-device-farm/


Steps:1
prereq:

	docker
	java
	appium server
	

Steps:
1. install jenkins on local machine (via docker)
2. setup jenkins ( maven ,java)

3. start emulators
4. Create your project in eclipse = testsng +appium +.....
5. write some test cases  (3+)for AUT ( application under test)  

6. push your code in github
7. from jenkins download your code (via git)
8.  run  you project from jenkins  (

---------------------------------------------------------------------------------------------------------------------------------------------------------------

Project

mysql project

https://community.simplilearn.com/threads/phase-4-learn-mobile-automation-and-cloud-testing-jan-cohort-jun-25-26-jul-2-3-9-10-16-17-23-24-30-31-mitesh-verma.73592/

Capstone project community link
https://community.simplilearn.com/threads/automation-test-engineer-capstone-jan-cohort-aug-14-21-mitesh-verma.75203/


make sure mySql is running under service section in Task manager

Loggin to mysql , run below command in cmd
mysql -u root -p


mysql -u root -p


source C:\Users\bhumika.dureja\eclipse-workspace1\medicare\medicarebackend\MySQL-DatabaseQueries.sql


//*[@href='/medicare/cart/validate']

APIs

http://localhost:8082/medicare/json/data/all/products?_=1661054337134

http://localhost:8082/medicare/json/data/category/1/products?_=1661054792955

http://localhost:8082/medicare/json/data/category/3/products?_=1661054864744

http://localhost:8082/medicare/json/data/mv/products  --- most viewed

http://localhost:8082/medicare/json/data/mp/products   -- most purchased


ALL:            http://localhost:8080/medicare/json/data/all/products
Category :      http://localhost:8080/medicare/json/data/category/1/products
Most Viewed:      http://localhost:8080/medicare/json/data/mv/products
Most Purchased: http://localhost:8080/medicare/json/data/mp/products


---
FlyAway project

source C:\Users\bhumika.dureja\Downloads\drive-download-20220814T050259Z-001\Project_References\QAtoQECapstone\Travel Domain_Final\DummyApp\DummyApp\FlyAway_DBScript_new_2.txt


C:\Users\bhumika.dureja\Downloads\FlyAway_DBScript_new_2.txt
-================================================================

TRAINER Notes

===========================================================

Capstone Project

community link:::
https://community.simplilearn.com/threads/automation-test-engineer-capstone-jan-cohort-aug-14-21-mitesh-verma.75203/


--------------------------
14 AUG
----------------------------

1. Sporty Shoes            - ecommerce website shoes
2. HealthCare             - Healthcare base prodcts sellling website
3. Airline booking site   -  book tickets for airlines


1. you have to select one project from these as your automation project
2. We need to install the se applications in your local machine and do our testing


PRE-REQ:
-----------------
Elicpse -- Apache server
Eclipse IDE for Enterprise Java and Web Developers
https://www.eclipse.org/downloads/packages/


java 1.8 will work 
or install 1.8+

EE installed

-------------------------
HEALTH CARE
-------------------------

1. WEBSITE  -> UI based automation using selenium
2. API      ->   API Testing -> restassured, newman (cli for postman)
3. Perf Test -> Jmeter  

4. Process ->  Run all these projects in jenkins , generate reports


KEY RESPONSIBILITIES
---------------------------

> Write an automation script using page object design to store the web elements of the 
home page 

Selenium ,Cucumber, Page object , maven , testng framework, parallel test, extent report, logging ....

config data => local.config => usrname /password / admins , urls, db loging

local.config
qa.config
e2e.config
preprod.config
Properties class in java 


> Perform API automation with Postman and perform API testing with Postman

> Jmeter 
to test perf of APIs


> Create and build a Jenkins job for all the automation testing phases performed in the 
previous steps



When will install our app
-----------------------------------
Front End -  Apache server + servlets...

Busineess logic   -     logic

Back End - DB  ( mysql)


-------------------------------
dbcode  --->   script which you need to run on mysql ... so that the base data get added in the DB

war     --->   webarchive  for web application


STEPS:

1. install MYSQL DB

https://dev.mysql.com/downloads/installer/

https://dev.mysql.com/get/Downloads/MySQLInstaller/mysql-installer-community-8.0.30.0.msi


mysql --version
mysql  Ver 8.0.30 for Win64 on x86_64 (MySQL Community Server - GPL)


connect to mysql
-----------------
mysql -u root -p 



project (medicare)  > src >java > connection.properties => put password = root


copy path of sql => 

C:\Users\mites\eclipse\java-2021-06\eclipse\capestone-aug22\medicare\medicarebackend\MySQL-DatabaseQueries.sql

mysql >>  source  C:\Users\mites\eclipse\java-2021-06\eclipse\capestone-aug22\medicare\medicarebackend\MySQL-DatabaseQueries.sql



JAVA 1.8 is in build path


http://localhost:8082/medicare


Test Cases:
-------------------
E2E
Register user
Search
Basket updates


Admin /Suplier
-----------------
- add products 



				
						
INSTALL AND RUN STEPS
==========================
1) open eclipse ->  File >import > web > war

2) Target runtime -> Apache Tomcat server 8.5  ( if not found click new button on the right side)
	-- downoad manully and add the path
	
3) java 1.8 is installed  > put it in build path

4)  import .zip file in Eclipse
●File->Import and select General. Under the General section, select the Archive File option and click Next

finish > "medicarebackend" folder should come

5) copy location of databasequeries.sql 

C:\Users\mites\eclipse\java-2021-06\eclipse\capestone_apr2022_sepcohort\medicare\medicarebackend\MySQL-DatabaseQueries.sql

source C:\Users\mites\eclipse\java-2021-06\eclipse\capestone_apr2022_sepcohort\medicare\medicarebackend\MySQL-DatabaseQueries.sql


6) connect to mysql

mysql -u root -p
root
=========================================================


DAY-2
=========================================================

API Calls


http://localhost:8086/medicare/json/data/category/1/products?_=1661054222738


cookie - JSESSIONID  - this cokkie is required when user need to copy the session  of existing user

if you are not login with any user => then we dont need this cookie ( to be added in postman/code in eclipse)


APIs
-------------
ALL:			http://localhost:8082/medicare/json/data/all/products
Category :  	http://localhost:8082/medicare/json/data/category/1/products
Most Viewed:  	http://localhost:8082/medicare/json/data/mv/products
Most Purchased: http://localhost:8082/medicare/json/data/mp/products

REST ASSURED +CUCUMBER
............................
Given the base url "localhost:8080"   
When I hit the endpoint "/medicare/json/data/all/products" 
Then I get "3" products
Then I validate the the following
|name|Paracetamol|


POSTMAN
................
NEWMAN - command line utility to run postman based apis test

-------------------------------------
PROJECT -2
-------------------------------------
Cloud Airlines
-------------------------------------

1) Import WAR

2) Run Script (modified script added in the community link   FlyAway_DBScript_new_2.txt)

script path:  D:\_partisai\simplilearn\capstone\FlyAway_DBScript_new_2.txt

COMMAND::
................
source D:\_partisai\simplilearn\capstone\FlyAway_DBScript_new_2.txt


3)
change DB Properties 
......................
usrname/pass/path
FlyAway\src\main\webapp\WEB-INF\jdbc.properties

jdbc:mysql://127.0.0.1:3306/flyaway

4) Run in Apache Server

right click on apache server > add> select flyaway

5) Restart Apache Server 
(right click > restart)

open in browser
http://localhost:<PORT>/FlyAway/


UI
-----------
1. Serach flights from homepage
2. SignUp
3. Login     
aa@aa.com  /pass123   

dashboard page is shown 
http://localhost:8086/FlyAway/dashboard
Home | Dashboard | Edit Profile | Your Bookings | Logout

4. Book Flights and validate summary page




API
-----------
http://localhost:8086/FlyAway/?source=1&destination=4

LOGIN
------------
Request URL: http://localhost:8086/FlyAway/loginaction
Request Method: POST
Status Code: 302 

FORM DATA
email_id: aa@aa.com
pwd: pass123


BOOKING
..................
 http://localhost:8086/FlyAway/memberbookings




BOOK
..........
http://localhost:8086/FlyAway/bookflight?id=3
http://localhost:8086/FlyAway/completepurchase

-------------
3
------------


Sporty Shoes



QUERIES
------------------
1) Properties Class
from Lakhi to All Participants:
how to create config file

2) from creatorshashikiran to All Participants:
i am having a problem with creating Maven project...


3)from Lakhi to All Participants:
can you show newman how to run API THROGH COMAND LINE


 <class name="apiTest.GetAllProduct_testCases"/>
      <class name="apiTest.Get_ViewCategory_testCase"/>
      <class name="apiTest.Get_MostViewedProducts_TestCases"/>
      <class name="apiTest.Get_MostPurchasedProducts_TestCases"/>